lookup_shiny <- read.csv("lookup_shiny.R")
#### R libraries ####
library(shiny)
library(DT)
library(htmltools)
# made in LeastCostPaths_Characteristics.R
lookup <- read.csv("C:/Users/immccull/Documents/Amazon/LeastCostPaths/LCP_lookup_table.csv")
#### Main program ####
# with help from: https://clarewest.github.io/blog/post/making-tables-shiny/
# first, clean up table for Shiny app
lookup_shiny <- lookup
lookup_shiny$Length_km <- round(lookup_shiny$Length_km, digits=0)
lookup_shiny$Protection_pct <- round(lookup_shiny$Protection_pct, digits=0)
lookup_shiny$Roads_perkm <- round(lookup_shiny$Roads_perkm, digits=5)
names(lookup_shiny) <- c('Start','Start country','End','End country',
'Length (km)', 'Elevation gain (m)',
'Protection (%)','Total roads' ,'Roads per km')
#### R libraries ####
library(shiny)
library(DT)
library(htmltools)
#### Input data ####
# made in LeastCostPaths_Characteristics.R
lookup <- read.csv("C:/Users/immccull/Documents/Amazon/LeastCostPaths/LCP_lookup_table.csv")
#### Main program ####
# with help from: https://clarewest.github.io/blog/post/making-tables-shiny/
# first, clean up table for Shiny app
lookup_shiny <- lookup
lookup_shiny$Length_km <- round(lookup_shiny$Length_km, digits=0)
lookup_shiny$Protection_pct <- round(lookup_shiny$Protection_pct, digits=0)
lookup_shiny$Roads_perkm <- round(lookup_shiny$Roads_perkm, digits=5)
names(lookup_shiny) <- c('Start','Start country','End','End country',
'Length (km)', 'Elevation gain (m)',
'Protection (%)','Total roads' ,'Roads per km')
ui <- fluidPage(titlePanel("Amazon corridor characteristics"),
mainPanel(width = 12,
DT::dataTableOutput("mytable")))
server <- function(input, output) {
output$mytable <- DT::renderDataTable(lookup_shiny,
options = list(scrollX = TRUE),
rownames = FALSE)
}
# Run the application
shinyApp(ui = ui, server = server)
library(rsconnect)
rsconnect::deployApp("C:/Users/immccull/Documents/Amazon/Rcode/CorridorLookupTable2",
appName='AmazonCorridorLookupTable')
#### R libraries ####
library(shiny)
library(DT)
library(htmltools)
#### Input data ####
# made in LeastCostPaths_Characteristics.R
lookup <- read.csv("C:/Users/immccull/Documents/Amazon/LeastCostPaths/LCP_lookup_table.csv")
#### Main program ####
# with help from: https://clarewest.github.io/blog/post/making-tables-shiny/
# first, clean up table for Shiny app
lookup_shiny <- lookup
lookup_shiny$Length_km <- round(lookup_shiny$Length_km, digits=0)
lookup_shiny$Protection_pct <- round(lookup_shiny$Protection_pct, digits=0)
lookup_shiny$Roads_perkm <- round(lookup_shiny$Roads_perkm, digits=5)
names(lookup_shiny) <- c('Start','Start country','End','End country',
'Length (km)', 'Elevation gain (m)',
'Protection (%)','Total roads' ,'Roads per km')
ui <- fluidPage(titlePanel("Amazon corridor characteristics"),
mainPanel(width = 12,
DT::dataTableOutput("mytable")))
server <- function(input, output) {
output$mytable <- DT::renderDataTable(lookup_shiny,
options = list(scrollX = TRUE),
rownames = FALSE)
}
# Run the application
shinyApp(ui = ui, server = server)
library(rsconnect)
rsconnect::deployApp("C:/Users/immccull/Documents/Amazon/Rcode/CorridorLookupTable2",
appName='AmazonCorridorLookupTable')
rsconnect::deployApp("C:/Users/immccull/Documents/Amazon/Rcode/CorridorLookupTable2",
appName='AmazonCorridorLookupTable')
# made in LeastCostPaths_Characteristics.R
lookup <- read.csv("LCP_lookup_table.csv")
#### Main program ####
# with help from: https://clarewest.github.io/blog/post/making-tables-shiny/
# first, clean up table for Shiny app
lookup_shiny <- lookup
lookup_shiny$Length_km <- round(lookup_shiny$Length_km, digits=0)
lookup_shiny$Protection_pct <- round(lookup_shiny$Protection_pct, digits=0)
lookup_shiny$Roads_perkm <- round(lookup_shiny$Roads_perkm, digits=5)
names(lookup_shiny) <- c('Start','Start country','End','End country',
'Length (km)', 'Elevation gain (m)',
'Protection (%)','Total roads' ,'Roads per km')
ui <- fluidPage(titlePanel("Amazon corridor characteristics"),
mainPanel(width = 12,
DT::dataTableOutput("mytable")))
server <- function(input, output) {
output$mytable <- DT::renderDataTable(lookup_shiny,
options = list(scrollX = TRUE),
rownames = FALSE)
}
# Run the application
shinyApp(ui = ui, server = server)
rsconnect::deployApp("C:/Users/immccull/Documents/Amazon/Rcode/CorridorLookupTable",
appName='AmazonCorridorLookupTable')
#### Input data ####
# made in LeastCostPaths_Characteristics.R
lookup <- read.csv("LCP_lookup_table.csv")
summary(lookup$Protection_pct)
75+22
